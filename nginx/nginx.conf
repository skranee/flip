upstream client_upstream {
  server client:3000;
}

upstream server_upstream {
  server server:7000;
}

server {

        root /var/www/build;

        index index.html index.htm index.nginx-debian.html;
    server_name www.mm2fliptest.ru mm2fliptest.ru; # managed by Certbot


    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/mm2fliptest.ru/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/mm2fliptest.ru/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    location /api/ {
        proxy_pass http://server:7000;
    }

    location ~* /ws {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy false;

      proxy_pass http://server:7000;
      proxy_redirect off;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;

    location / {
      proxy_pass http://client_upstream;
    }
}

server {
    if ($host = www.mm2fliptest.ru) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = mm2fliptest.ru) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80 ;
        listen [::]:80 ;
    server_name www.mm2fliptest.ru mm2fliptest.ru;
    return 404; # managed by Certbot
}

server {
    listen 80 default_server;

    root /var/www/build;

    server_name _;

    server_tokens off;

    location /api/ {
        proxy_pass http://server:7000;
    }

    location ~* /ws {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy false;

      proxy_pass http://server:7000;
      proxy_redirect off;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    gzip on;
    gzip_proxied any;
    gzip_comp_level 4;
    gzip_types text/css application/javascript image/svg+xml;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;

    location / {
      proxy_pass http://client_upstream;
    }
}